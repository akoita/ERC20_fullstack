#
# Copyright IBM Corp All Rights Reserved
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

networks:
  ptwist:

services:
  ca.medsos.com:
    image: hyperledger/fabric-ca:1.4.1
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.medsos.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.MEDSOS.example.com-cert.pem
      #This value is set automatically by ca-env.sh script
      #- FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/f7bbeb20ee3010110a3a7e8ccc133c16ad69296932ed8847f0491192a14dda44_sk
    ports:
      - "7054:7054"
    command: bash -c '. /etc/hyperledger/fabric-ca-server/volume/ca-env.sh && fabric-ca-server start -b admin:adminpw'
    #command: sh -c 'fabric-ca-server start -b admin:adminpw'
    volumes:
      - ./crypto-config/peerOrganizations/MEDSOS.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
      - ./volume:/etc/hyperledger/fabric-ca-server/volume
    container_name: ca.medsos.com
    networks:
      - ptwist

  ca.bluecity.com:
    image: hyperledger/fabric-ca:1.4.1
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.bluecity.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.BLUECITY.example.com-cert.pem
      #This value is set automatically by ca-env.sh script
      #- FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/f7bbeb20ee3010110a3a7e8ccc133c16ad69296932ed8847f0491192a14dda44_sk
    ports:
      - "27054:7054"
    command: bash -c '. /etc/hyperledger/fabric-ca-server/volume/ca-env.sh && fabric-ca-server start -b admin:adminpw'
    #command: sh -c 'fabric-ca-server start -b admin:adminpw'
    volumes:
      - ./crypto-config/peerOrganizations/BLUECITY.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
      - ./volume:/etc/hyperledger/fabric-ca-server/volume
    container_name: ca.bluecity.com
    networks:
      - ptwist






  ca.hslu.com:
    image: hyperledger/fabric-ca:1.4.1
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.hslu.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.HSLU.example.com-cert.pem

      #This value is set automatically by ca-env.sh script
      #- FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/f7bbeb20ee3010110a3a7e8ccc133c16ad69296932ed8847f0491192a14dda44_sk
    ports:
      - "17054:7054"
    command: bash -c '. /etc/hyperledger/fabric-ca-server/volume/ca-env.sh && fabric-ca-server start -b admin:adminpw'
    #command: sh -c 'fabric-ca-server start -b admin:adminpw'
    volumes:
      - ./crypto-config/peerOrganizations/HSLU.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
      - ./volume:/etc/hyperledger/fabric-ca-server/volume
    container_name: ca.hslu.com
    networks:
      - ptwist



  orderer.example.com:
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer:1.4.1
    environment:
      - GODEBUG=netdns=go
      - ORDERER_GENERAL_LOGLEVEL=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./config/:/etc/hyperledger/configtx
        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/:/etc/hyperledger/msp/orderer
        - ./crypto-config/peerOrganizations/MEDSOS.example.com/peers/peer0.MEDSOS.example.com/:/etc/hyperledger/msp/peerMEDSOS
    networks:
      - ptwist

  peer0.MEDSOS.example.com:
    container_name: peer0.MEDSOS.example.com
    image: hyperledger/fabric-peer:1.4.1
    environment:
      - GODEBUG=netdns=go
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.MEDSOS.example.com
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=MEDSOSMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.MEDSOS.example.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_ptwist
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=medsos.couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /etc/hyperledger/configtx/
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/MEDSOS.example.com/peers/peer0.MEDSOS.example.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/MEDSOS.example.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - medsos.couchdb
    networks:
      - ptwist

  peer1.MEDSOS.example.com:
    container_name: peer1.MEDSOS.example.com
    image: hyperledger/fabric-peer:1.4.1
    environment:
      - GODEBUG=netdns=go
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.MEDSOS.example.com
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=MEDSOSMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer1.MEDSOS.example.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_ptwist
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=medsos.couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /etc/hyperledger/configtx/
    #/opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 8051:7051
      - 8053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/MEDSOS.example.com/peers/peer1.MEDSOS.example.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/MEDSOS.example.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - medsos.couchdb
    networks:
      - ptwist

  peer0.HSLU.example.com:
    container_name: peer0.HSLU.example.com
    image: hyperledger/fabric-peer:1.4.1
    environment:
      - GODEBUG=netdns=go
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.HSLU.example.com
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=HSLUMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.HSLU.example.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_ptwist
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=hslu.couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /etc/hyperledger/configtx/
    #/opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 9051:7051
      - 9053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/HSLU.example.com/peers/peer0.HSLU.example.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/HSLU.example.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - hslu.couchdb
    networks:
      - ptwist

  peer1.HSLU.example.com:
    container_name: peer1.HSLU.example.com
    image: hyperledger/fabric-peer:1.4.1
    environment:
      - GODEBUG=netdns=go
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.HSLU.example.com
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=HSLUMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer1.HSLU.example.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_ptwist
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=hslu.couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /etc/hyperledger/configtx/
    #/opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 19051:7051
      - 19053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/HSLU.example.com/peers/peer1.HSLU.example.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/HSLU.example.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - hslu.couchdb
    networks:
      - ptwist



  peer0.BLUECITY.example.com:
    container_name: peer0.BLUECITY.example.com
    image: hyperledger/fabric-peer:1.4.1
    environment:
      - GODEBUG=netdns=go
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.BLUECITY.example.com
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=BLUECITYMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.BLUECITY.example.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_ptwist
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=bluecity.couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /etc/hyperledger/configtx/
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 12051:7051
      - 12053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/BLUECITY.example.com/peers/peer0.BLUECITY.example.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/BLUECITY.example.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - bluecity.couchdb
    networks:
      - ptwist

  peer1.BLUECITY.example.com:
    container_name: peer1.BLUECITY.example.com
    image: hyperledger/fabric-peer:1.4.1
    environment:
      - GODEBUG=netdns=go
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.BLUECITY.example.com
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=BLUECITYMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer1.BLUECITY.example.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_ptwist
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=bluecity.couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /etc/hyperledger/configtx/
    #/opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 18051:7051
      - 18053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/BLUECITY.example.com/peers/peer1.BLUECITY.example.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/BLUECITY.example.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - bluecity.couchdb
    networks:
      - ptwist




  api.MEDSOS.example.com:
    container_name: api.MEDSOS.example.com
    image: erc20_fs/node_api
    environment:
      - ORDERER_ADDR=grpc://orderer.example.com:7050
      - PEER_ADDR=grpc://peer0.MEDSOS.example.com:7051
      - PEER_LISTENER_ADDR=grpc://peer0.MEDSOS.example.com:7053
      - COUCHDB_ADDR=http://medsos.couchdb:5984
      - CA_ADDR=http://ca.medsos.com:7054
      - CA_NAME=ca.medsos.com
      - MSPID=MEDSOSMSP
    working_dir: /usr/src/app/
    command: bash -c "source parse.sh && npm start"
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 80:80
      - 443:443
    #volumes:
    depends_on:
      - peer0.MEDSOS.example.com
    networks:
      - ptwist

  api.HSLU.example.com:
    container_name: api.HSLU.example.com
    image: erc20_fs/node_api
    environment:
      - ORDERER_ADDR=grpc://orderer.example.com:7050
      - PEER_ADDR=grpc://peer0.HSLU.example.com:7051
      - PEER_LISTENER_ADDR=grpc://peer0.HSLU.example.com:7053
      - COUCHDB_ADDR=http://hslu.couchdb:5984
      - CA_ADDR=http://ca.hslu.com:7054
      - CA_NAME=ca.hslu.com
      - MSPID=HSLUMSP
    working_dir: /usr/src/app/
    command: bash -c "source parse.sh && npm start"
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 81:80
      - 444:443
    #volumes:
    depends_on:
      - peer0.HSLU.example.com
    networks:
      - ptwist

  api.BLUECITY.example.com:
    container_name: api.BLUECITY.example.com
    image: erc20_fs/node_api
    environment:
      - ORDERER_ADDR=grpc://orderer.example.com:7050
      - PEER_ADDR=grpc://peer0.BLUECITY.example.com:7051
      - PEER_LISTENER_ADDR=grpc://peer0.BLUECITY.example.com:7053
      - COUCHDB_ADDR=http://bluecity.couchdb:5984
      - CA_ADDR=http://ca.bluecity.com:7054
      - CA_NAME=ca.bluecity.com
      - MSPID=BLUECITYMSP
    working_dir: /usr/src/app/
    command: bash -c "source parse.sh && npm start"
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 82:80
      - 445:443
    #volumes:
    depends_on:
      - peer0.BLUECITY.example.com
    networks:
      - ptwist


  medsos.couchdb:
    container_name: medsos.couchdb
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - ptwist

  hslu.couchdb:
    container_name: hslu.couchdb
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 15984:5984
    networks:
      - ptwist

  bluecity.couchdb:
    container_name: bluecity.couchdb
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 25984:5984
    networks:
      - ptwist







  cli:
    container_name: cli
    image: hyperledger/fabric-tools:1.4.1
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=info
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.MEDSOS.example.com:7051
      - CORE_PEER_LOCALMSPID=MEDSOSMSP
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/MEDSOS.example.com/users/Admin@MEDSOS.example.com/msp
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - ./go/:/opt/gopath 
        - /var/run/:/host/var/run/
        - ./../chaincode/:/opt/gopath/src/github.com/chaincode
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
    networks:
        - ptwist
    #depends_on:
    #  - orderer.example.com
    #  - peer0.MEDSOS.example.com
    #  - couchdb
