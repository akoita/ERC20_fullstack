---
swagger: "2.0"
info:
  description: "API handling chaincode calling and identities for Hyperledger Fabric"
  version: "1.0.0"
  title: "Fabric API"
  contact:
    email: "Pierre.CLUCHET@almerys.com"
tags:
- name: "Fabric API"
  description: "Modular API to interract with hyperledger fabric"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
paths:
  /getprojectbytoken:
    get:
      tags:
      - "Project management"
      summary: "allow anyone to see the data about a project if they have a reviewer token"
      description: ""
      operationId: "GetProjectByToken"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "token"
        in: "header"
        description: "reviewer token"
        required: true
        type: "string"
        format: "string"
      responses:
        200:
          description: "Project succesfully retreived"
          schema:
            $ref: "#/definitions/inline_response_200"
        404:
          description: "Project not found"
          schema:
            type: "string"
      x-swagger-router-controller: "GetProjectByToken"

 
  /users/{username}/addproject:
    post:
      tags:
      - "Project management"
      summary: "allow users to add a project to their profile"
      description: ""
      operationId: "AddProject"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "X-request-use-token"
        in: "header"
        description: "boolean, true if a session token is used"
        required: false
        type: "boolean"
      - name: "X-request-token"
        in: "header"
        description: "session token"
        required: false
        type: "string"
      - name: "username"
        in: "path"
        description: "Username"
        required: true
        type: "string"
        format: "uuid"
      - name: "X-request-password"
        in: "header"
        description: "Password of the user"
        required: false
        type: "string"
        format: "string"
      - name: "X-request-project"
        in: "header"
        description: "project to add in user profile"
        required: false
        type: "string"
        format: "string"
 
      responses:
        200:
          description: "Project succesfully added to user profile"
          schema:
            $ref: "#/definitions/inline_response_200"
        401:
          description: "username/pw missing or incorrect"
          schema:
            type: "string"
        404:
          description: "username not found"
          schema:
            type: "string"
      x-swagger-router-controller: "AddProject"

  /users/{username}/{projectid}/submitreview:
    post:
      tags:
      - "Project management"
      summary: "allow reviewers to submit their review on a project"
      description: ""
      operationId: "SubmitReview"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "X-request-use-token"
        in: "header"
        description: "boolean, true if a session token is used"
        required: false
        type: "boolean"
      - name: "X-request-token"
        in: "header"
        description: "session token"
        required: false
        type: "string"
      - name: "username"
        in: "path"
        description: "Username"
        required: true
        type: "string"
        format: "uuid"
      - name: "X-request-password"
        in: "header"
        description: "Password of the user"
        required: false
        type: "string"
        format: "string"
      - name: "X-request-review"
        in: "header"
        description: "Review, json format"
        required: true
        type: "string"
        format: "string"
      - name: "projectid"
        in: "path"
        description: "projectid where to add a review"
        required: true
        type: "string"
        format: "string"
 
      responses:
        200:
          description: "Reviewer link succesfully generated"
          schema:
            $ref: "#/definitions/inline_response_200"
        401:
          description: "wrong username/pw or wrong project"
          schema:
            type: "string"
        404:
          description: "username not found"
          schema:
            type: "string"
      x-swagger-router-controller: "SubmitReview"

  /users/{username}/grantReviewRights:
    patch:
      tags:
      - "Project management"
      summary: "allow an existing user to become reviewer"
      description: ""
      operationId: "GrantReviewRights"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "X-request-use-token"
        in: "header"
        description: "boolean, true if a session token is used"
        required: false
        type: "boolean"
      - name: "X-request-token"
        in: "header"
        description: "session token"
        required: false
        type: "string"
      - name: "username"
        in: "path"
        description: "Username"
        required: true
        type: "string"
        format: "uuid"
      - name: "X-request-password"
        in: "header"
        description: "Password of the user"
        required: false
        type: "string"
        format: "string"
      - name: "X-request-reviewtoken"
        in: "header"
        description: "Review token"
        required: true
        type: "string"
        format: "string"
      responses:
        200:
          description: "Reviewing rights successfully added"
          schema:
            $ref: "#/definitions/inline_response_200"
        401:
          description: "wrong username/pw or wrong project"
          schema:
            type: "string"
        404:
          description: "username not found"
          schema:
            type: "string"
      x-swagger-router-controller: "GrantReviewRights"

  /users/{username}/{projectid}/addreviewer:
    patch:
      tags:
      - "Project management"
      summary: "allow users to invite reviewers to a project"
      description: ""
      operationId: "AddReviewerToProject"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "X-request-use-token"
        in: "header"
        description: "boolean, true if a session token is used"
        required: false
        type: "boolean"
      - name: "X-request-token"
        in: "header"
        description: "session token"
        required: false
        type: "string"
      - name: "username"
        in: "path"
        description: "Username"
        required: true
        type: "string"
        format: "uuid"
      - name: "X-request-password"
        in: "header"
        description: "Password of the user"
        required: false
        type: "string"
        format: "string"
      - name: "projectid"
        in: "path"
        description: "projectid where to add a reviewer"
        required: true
        type: "string"
        format: "string"
      - name: "reviewer_mail"
        in: "header"
        description: "e-mail of the reviewer, an email will be sent to this address"
        required: false
        type: "string"
        format: "string"
 
 
      responses:
        200:
          description: "Reviewer link succesfully generated"
          schema:
            $ref: "#/definitions/inline_response_200"
        401:
          description: "wrong username/pw or wrong project"
          schema:
            type: "string"
        404:
          description: "username not found"
          schema:
            type: "string"
      x-swagger-router-controller: "AddReviewerToProject"

  /users/searchprojects:
    get:
      tags:
      - "Project management"
      summary: "return a list projects which name match the given name"
      description: ""
      operationId: "SearchProjects"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "X-request-search"
        in: "header"
        description: "search"
        required: false
        type: "string"
        format: "string"
 
      responses:
        200:
          description: "Search worked"
          schema:
            $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "SearchProjects"
 
  /users/{username}/resetpass/{token}:
    get:
      tags:
      - "Identity management"
      summary: "reset user password with a valid token sent by email"
      description: ""
      operationId: "ResetPassToken"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "username"
        in: "path"
        description: "Username of the user you want to authenticate"
        required: true
        type: "string"
        format: "uuid"
      - name: "token"
        in: "path"
        description: "Valid pass change token sent by email"
        required: true
        type: "string"
      responses:
        200:
          description: "Success : password updated"
          schema:
            $ref: "#/definitions/inline_response_200"
        401:
          description: "wrong token"
          schema:
            type: "string"
    x-swagger-router-controller: "ResetPassToken"
  /users/{username}/resetpass:
    post:
      tags:
      - "Identity management"
      summary: "reset user password (email validated)"
      description: ""
      operationId: "ResetPass"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "username"
        in: "path"
        description: "Username of the user you want to authenticate"
        required: true
        type: "string"
        format: "uuid"
      - name: "X-request-newpass"
        in: "header"
        description: "new password for this user"
        required: true
        type: "string"
      - name: "X-request-email"
        in: "header"
        description: "user email, have to match with email given in registration"
        required: true
        type: "string"
      responses:
        200:
          description: "Success : user will have to read his mails to update the password"
          schema:
            $ref: "#/definitions/inline_response_200"
        404:
          description: "username not found or no correlation between username and email given"
          schema:
            type: "string"
      x-swagger-router-controller: "ResetPass"
  /users/{username}/updatepass:
    patch:
      tags:
      - "Identity management"
      summary: "change user password"
      description: ""
      operationId: "ChangePass"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "X-request-use-token"
        in: "header"
        description: "boolean, true if a session token is used"
        required: false
        type: "boolean"
      - name: "X-request-token"
        in: "header"
        description: "session token"
        required: false
        type: "string"
      - name: "X-request-newpass"
        in: "header"
        description: "new password for this user"
        required: true
        type: "string"
      - name: "username"
        in: "path"
        description: "Username of the user you want to authenticate"
        required: true
        type: "string"
        format: "uuid"
      - name: "X-request-password"
        in: "header"
        description: "Password of the user"
        required: false
        type: "string"
        format: "string"
      responses:
        200:
          description: "Password successfully updated"
          schema:
            $ref: "#/definitions/inline_response_200"
        401:
          description: "username/pw missing or incorrect"
          schema:
            type: "string"
        404:
          description: "username not found"
          schema:
            type: "string"
      x-swagger-router-controller: "ChangePass"
  /users/{username}/updatemisc:
    patch:
      tags:
      - "Identity management"
      summary: "change user misc data"
      description: ""
      operationId: "ChangeMisc"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "X-request-use-token"
        in: "header"
        description: "boolean, true if a session token is used"
        required: false
        type: "boolean"
      - name: "X-request-token"
        in: "header"
        description: "session token"
        required: false
        type: "string"
      - name: "X-request-new-misc-private"
        in: "header"
        description: "new misc private data for this user"
        required: false
        type: "string"
      - name: "X-request-new-misc-public"
        in: "header"
        description: "new misc public data for this user"
        required: false
        type: "string"
      - name: "username"
        in: "path"
        description: "Username"
        required: true
        type: "string"
        format: "uuid"
      - name: "X-request-password"
        in: "header"
        description: "Password of the user"
        required: false
        type: "string"
        format: "string"
      responses:
        200:
          description: "Password successfully updated"
          schema:
            $ref: "#/definitions/inline_response_200"
        401:
          description: "username/pw missing or incorrect"
          schema:
            type: "string"
        404:
          description: "username not found"
          schema:
            type: "string"
      x-swagger-router-controller: "ChangeMisc"
  /users/{username}/getpublic:
    get:
      tags:
      - "Identity management"
      summary: "get any user public key and misc public data"
      description: ""
      operationId: "GetMisc"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
        - name: "username"
          in: "path"
          description: "Username of the user you want to get public data for"
          required: true
          type: "string"
          format: "uuid"
      responses:
        200:
          description: "User misc data successfully retreived"
          schema:
            $ref: "#/definitions/inline_response_200"
        404:
          description: "username not found"
          schema:
            type: "string"
      x-swagger-router-controller: "GetMisc"

  /users/{username}/validate/{token}:
    get:
      tags:
      - "Identity management"
      summary: "confirm account via a link sent by e-mail"
      description: ""
      operationId: "Validate"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
        - name: "username"
          in: "path"
          description: "Username of the user validating his account"
          required: true
          type: "string"
          format: "uuid"
        - name: "token"
          in: "path"
          description: "unique token sent by email"
          required: true
          type: "string"
          format: "uuid"
      responses:
        200:
          description: "User misc data successfully retreived"
          schema:
            $ref: "#/definitions/inline_response_200"
        404:
          description: "username not found"
          schema:
            type: "string"
      x-swagger-router-controller: "Validate"

  /users/getusernames:
    get:
      tags:
      - "Identity management"
      summary: "get usernames given a list of public keys"
      description: ""
      operationId: "GetUsernames"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "X-request-use-token"
        in: "header"
        description: "boolean, true if a session token is used"
        required: false
        type: "boolean"
      - name: "X-request-token"
        in: "header"
        description: "session token"
        required: false
        type: "string"
      - name: "X-request-username"
        in: "header"
        description: "username"
        required: false
        type: "string"
        format: "string"
      - name: "X-request-password"
        in: "header"
        description: "Password of the user"
        required: false
        type: "string"
        format: "string"
      - name: "pubkeys"
        in: "header"
        description: "publickeys of the users, format : [\"pubkey1\",\"pubkey2\"]"
        required: false
        type: "string"
        format: "string"
      responses:
        200:
          description: "query worked"
        401:
          description: "username/pw missing or incorrect"
          schema:
            type: "string"
      x-swagger-router-controller: "GetUsernames"
  /users/search:
    get:
      tags:
      - "Identity management"
      summary: "search users whose name match given regex"
      description: ""
      operationId: "SearchUser"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "X-request-use-token"
        in: "header"
        description: "boolean, true if a session token is used"
        required: false
        type: "boolean"
      - name: "X-request-token"
        in: "header"
        description: "session token"
        required: false
        type: "string"
      - name: "X-request-username"
        in: "header"
        description: "username"
        required: false
        type: "string"
        format: "string"
      - name: "X-request-password"
        in: "header"
        description: "Password of the user"
        required: false
        type: "string"
        format: "string"
      - name: "search"
        in: "header"
        description: "search string"
        required: false
        type: "string"
        format: "string"
      responses:
        200:
          description: "search worked"
        401:
          description: "username/pw missing or incorrect"
          schema:
            type: "string"
      x-swagger-router-controller: "SearchUser"
  /users/{username}/auth:
    get:
      tags:
      - "Identity management"
      summary: "get your public key, ask for a session token"
      description: ""
      operationId: "getUserInfos"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "X-request-use-token"
        in: "header"
        description: "boolean, true if a session token is used"
        required: false
        type: "boolean"
      - name: "X-request-token-expire"
        in: "header"
        description: "token duration, in seconds"
        required: false
        type: "integer"
      - name: "X-request-auto-expand-token"
        in: "header"
        description: "set this to true to automatically expand the token life every time it is used"
        required: false
        type: "boolean"
      - name: "X-request-permanent-token"
        in: "header"
        description: "set this to true to make the access token permanent (unsafe)"
        required: false
        type: "boolean"
      - name: "X-request-auto-expand-duration"
        in: "header"
        description: "how much time to add on token life expand (sec)"
        required: false
        type: "integer"
      - name: "X-request-link-token-to-ip"
        in: "header"
        description: "set this to true to use the token only with this IP"
        required: false
        type: "boolean"
      - name: "username"
        in: "path"
        description: "Username of the user you want to authenticate"
        required: true
        type: "string"
        format: "uuid"
      - name: "X-request-password"
        in: "header"
        description: "Password of the user"
        required: true
        type: "string"
        format: "string"
      responses:
        200:
          description: "Username was found"
          schema:
            $ref: "#/definitions/inline_response_200"
        401:
          description: "username/pw missing or incorrect"
          schema:
            type: "string"
        404:
          description: "username not found"
          schema:
            type: "string"
      x-swagger-router-controller: "Auth"
    post:
      tags:
      - "Identity management"
      summary: "Register a new user for this organisation"
      description: ""
      operationId: "register"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "username"
        in: "path"
        description: "Username of the new user"
        required: true
        type: "string"
        format: "uuid"
      - name: "X-request-password"
        in: "header"
        description: "Password of the new user"
        required: true
        type: "string"
        format: "string"
      - name: "X-request-misc-private"
        in: "header"
        description: "misc data stored off the blockchain, accessible only by this user"
        required: true
        type: "string"
        format: "string"
      - name: "X-request-misc-public"
        in: "header"
        description: "misc data stored off the blockchain, accessible by everyone"
        required: false
        type: "string"
        format: "string"
      - name: "X-request-peer-review-token"
        in: "header"
        description: "To provide in the case someone has been invited as expert peer reviewer to a project"
        required: false
        type: "string"
        format: "string"
      - name: "X-request-nomail"
        in: "header"
        description: "secret string to skip email validation"
        required: false
        type: "string"
        format: "string"
 
 
      responses:
        200:
          description: "Username succesfully enrolled"
          schema:
            $ref: "#/definitions/inline_response_200_1"
        409:
          description: "Username already exist"
          schema:
            type: "string"
      x-swagger-router-controller: "Register"
  /ledger/{channel}/{chaincode}/{function}:
    get:
      tags:
      - "Ledger operations"
      summary: "query (retreive mode) the chaincode"
      description: ""
      operationId: "query"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "X-request-use-token"
        in: "header"
        description: "boolean, true if a session token is used"
        required: false
        type: "boolean"
      - name: "X-request-token"
        in: "header"
        description: "session token"
        required: false
        type: "string"
      - name: "X-request-username"
        in: "header"
        description: "username"
        required: false
        type: "string"
        format: "string"
      - name: "X-request-password"
        in: "header"
        description: "Password of the user"
        required: false
        type: "string"
        format: "string"
      - name: "channel"
        in: "path"
        description: "channel in which the transaction will occur"
        required: true
        type: "string"
        format: "string"
      - name: "chaincode"
        in: "path"
        description: "Name of the chaincode to invoke"
        required: true
        type: "string"
        format: "string"
      - name: "function"
        in: "path"
        description: "function to invoke in given chaincode"
        required: true
        type: "string"
        format: "string"
      - name: "params"
        in: "header"
        description: "parameters sent to the chaincode"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
      responses:
        200:
          description: "Invoke was succesfully sent to the ledger, however, this does\
            \ not means the chaincode itself validated the transaction, you must check\
            \ the response for that"
          schema:
            $ref: "#/definitions/inline_response_200_3"
        401:
          description: "username/pw missing or incorrect"
          schema:
            type: "string"
      x-swagger-router-controller: "Query"
    post:
      tags:
      - "Ledger operations"
      summary: "Invoke (commit mode) a the chaincode"
      description: ""
      operationId: "invoke"
      consumes:
      - "application/json"
      - "text/plain"
      produces:
      - "application/json"
      - "text/plain"
      parameters:
      - name: "X-request-use-token"
        in: "header"
        description: "boolean, true if a session token is used"
        required: false
        type: "boolean"
      - name: "X-request-token"
        in: "header"
        description: "session token"
        required: false
        type: "string"
      - name: "X-request-username"
        in: "header"
        description: "username"
        required: false
        type: "string"
        format: "string"
      - name: "X-request-password"
        in: "header"
        description: "Password of the user"
        required: false
        type: "string"
        format: "string"
      - name: "channel"
        in: "path"
        description: "channel in which the transaction will occur"
        required: true
        type: "string"
        format: "string"
      - name: "chaincode"
        in: "path"
        description: "Name of the chaincode to invoke"
        required: true
        type: "string"
        format: "string"
      - name: "function"
        in: "path"
        description: "function to invoke in given chaincode"
        required: true
        type: "string"
        format: "string"
      - name: "params"
        in: "header"
        description: "parameters sent to the chaincode"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
      responses:
        200:
          description: "Invoke was succesfully sent to the ledger, however, this does\
            \ not means the chaincode itself validated the transaction, you must check\
            \ the response for that"
          schema:
            $ref: "#/definitions/inline_response_200_2"
        401:
          description: "username/pw missing or incorrect"
          schema:
            type: "string"
      x-swagger-router-controller: "Invoke"
definitions:
  inline_response_200_1:
    properties:
      pubkey:
        type: "string"
        description: "The public key of the just enrolled user"
    example:
      pubkey: "pubkey"
  inline_response_200:
    properties:
      pubkey:
        type: "string"
        description: "The public key of the given user"
    example:
      pubkey: "pubkey"
  inline_response_200_2:
    properties:
      payload:
        type: "string"
        description: "The payload returned by the chaincode"
    example:
      status: "200"
      payload: "payload"
      message: ""
  inline_response_200_3:
    properties:
      payload:
        type: "string"
        description: "The payload returned by the chaincode"
    example:
      status: "200"
      response: "response"
      message: ""

